#include <iostream>
using namespace std;

/**********************************************************
 * cpp函数可存在默认的形参值
 * 1.默认值只能在最后并列，即从一位置开始到后都必须有默认形参
 * 2.一般在函数声明中有默认参数值，函数实现中就不能有默认参数值，
 *   否则会产生二义性问题，程序无法运行
************************************************************/
int func(int a, int b, int c = 10);

int func(int a, int b, int c)
{
    return a+b+c;
}

void test01()
{
    cout << func(10,10) << endl;
}
/***************************************************
 * 函数形参可存在占位参数(数据类型)，占位参数也可以有默认的值
 * 在栈中拿不到对应的值
****************************************************/
void func_1(int a, int = 10)
{
    cout << "this is func" << endl;
}

/***********************************************************************
 * 函数重载
 * 同一作用域下的函数名相同，函数参数不同、个数不同、顺序不同
 * 返回值不能作为重载
 * 1.引用类型作为函数重载的参数时(int &a)，两者类型是不同的，因此可以重载的
 *                            (const int &a)
 * 2.函数重载碰到默认参数，因为默认参数可以在调用时不写，
 *   出现编译器二义性，避免这种情况发生
************************************************************************/
void func_2(int &a)
{
    cout << "int &a" << endl;
}
void func_2(const int &a)
{
    cout << "const int &a" << endl;
}

// 二义性
void func_3(int a, int b = 10)
{

}
void func_3(int a)
{

}

void test02()
{
    int a = 10;

    func_2(a);
    //const int &a    <==>  int temp = a;  const int &a = temp;
    func_2(10);
}


int main()
{
    test01();

    system("pause");
    return 0;
}